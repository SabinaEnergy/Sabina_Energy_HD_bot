import os, re, time, json, requests
from flask import Flask, request, jsonify
import telebot
from telebot import types

# ========= ENV =========
BOT_TOKEN    = os.getenv("BOT_TOKEN", "").strip()
BASE_URL     = os.getenv("BASE_URL", "https://example.onrender.com").rstrip("/")
SECRET_TOKEN = os.getenv("SECRET_TOKEN", "SabinaSecret2025")

# –∫—É–¥–∞ –≤–µ–¥—ë–º –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π/–ø–ª–∞—Ç–Ω—ã–π —Ä–∞—Å—á—ë—Ç (—Ç–≤–æ—è —Ä–µ—Ñ-—Å—Å—ã–ª–∫–∞)
FREE_CALC_URL = os.getenv(
    "FREE_CALC_URL",
    "https://human-design.space/dizajn-cheloveka-raschet-karty/#/?rave=7366406054640513"
)
PAID_CALC_URL = os.getenv(
    "PAID_CALC_URL",
    "https://human-design.space/dizajn-cheloveka-raschet-karty/#/?rave=7366406054640513"
)
VIDEO_URL    = os.getenv("VIDEO_URL", "https://t.me/your_channel/123")
SERVICES_URL = os.getenv("SERVICES_URL", "https://t.me/your_contact")  # –∫—É–¥–∞ –ø–∏—Å–∞—Ç—å/–∑–∞–ø–∏—Å–∞—Ç—å—Å—è

TG_API = f"https://api.telegram.org/bot{BOT_TOKEN}"

# ========= APP/TELEBOT =========
app = Flask(__name__)
bot = telebot.TeleBot(BOT_TOKEN, parse_mode="Markdown")

# ========= –¢–ï–ö–°–¢–´ (—Ç–≤–æ–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã) =========
TEXT_INTRO = (
    "‚ú® *–ß—Ç–æ —Ç–∞–∫–æ–µ Human Design?*\n"
    "Human Design –ø–æ—è–≤–∏–ª—Å—è –≤ 1987 –≥–æ–¥—É –ø–æ—Å–ª–µ –º–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –†–∞ –£—Ä—É –•—É –Ω–∞ –ò–±–∏—Ü–µ.\n"
    "–≠—Ç–æ —Å–∏–Ω—Ç–µ–∑ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–∏, –ò-–¶–∑–∏–Ω, –ö–∞–±–±–∞–ª—ã, —á–∞–∫—Ä–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∏ –∏–¥–µ–π –∫–≤–∞–Ω—Ç–æ–≤–æ–π —Ñ–∏–∑–∏–∫–∏.\n"
    "–ì–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî –∂–∏—Ç—å –≤ —Å–æ–≥–ª–∞—Å–∏–∏ —Å–æ —Å–≤–æ–µ–π –ø—Ä–∏—Ä–æ–¥–æ–π, –≤–º–µ—Å—Ç–æ –±–æ—Ä—å–±—ã —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –º–µ—Ö–∞–Ω–∏–∫–æ–π."
)

TEXT_NEUTRINO = (
    "üåå *–ö–æ–Ω—Ü–µ–ø—Ü–∏—è –Ω–µ–π—Ç—Ä–∏–Ω–æ*\n"
    "–ù–µ–π—Ç—Ä–∏–Ω–æ ‚Äî –º–∏–∫—Ä–æ—á–∞—Å—Ç–∏—Ü—ã, –ø—Ä–æ—Ö–æ–¥—è—â–∏–µ —á–µ—Ä–µ–∑ –≤—Å—ë. –ü–æ—Ç–æ–∫ –Ω–µ—Å—ë—Ç ¬´–æ—Ç–ø–µ—á–∞—Ç–æ–∫¬ª –ø–ª–∞–Ω–µ—Ç –≤ –º–æ–º–µ–Ω—Ç —Ä–æ–∂–¥–µ–Ω–∏—è.\n"
    "–≠—Ç–æ—Ç –æ—Ç–ø–µ—á–∞—Ç–æ–∫ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ –±–æ–¥–∏–≥—Ä–∞—Ñ–µ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä —ç–Ω–µ—Ä–≥–∏–π."
)

TEXT_CENTERS = (
    "üîπ *9 —Ü–µ–Ω—Ç—Ä–æ–≤ –±–æ–¥–∏–≥—Ä–∞—Ñ–∞*\n"
    "1) –ö–æ—Ä–Ω–µ–≤–æ–π ‚Äî –¥–∞–≤–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, —Å—Ç—Ä–µ—Å—Å.\n"
    "2) –°–∞–∫—Ä–∞–ª—å–Ω—ã–π ‚Äî –∂–∏–∑–Ω–µ–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è, –æ—Ç–∫–ª–∏–∫, —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ.\n"
    "3) –°–µ–ª–µ–∑—ë–Ω–æ—á–Ω—ã–π ‚Äî –∏–Ω—Ç—É–∏—Ü–∏—è, –∑–¥–æ—Ä–æ–≤—å–µ, –≤—ã–∂–∏–≤–∞–Ω–∏–µ.\n"
    "4) –°–æ–ª–Ω–µ—á–Ω–æ–µ —Å–ø–ª–µ—Ç–µ–Ω–∏–µ ‚Äî —ç–º–æ—Ü–∏–∏, –≤–æ–ª–Ω—ã.\n"
    "5) –°–µ—Ä–¥–µ—á–Ω—ã–π (–≠–≥–æ) ‚Äî –≤–æ–ª—è, —Å–∏–ª–∞, –∂–µ–ª–∞–Ω–∏—è.\n"
    "6) –ì–æ—Ä–ª–æ–≤–æ–π ‚Äî –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è, –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ.\n"
    "7) –ê–¥–∂–Ω–∞ ‚Äî –∞–Ω–∞–ª–∏–∑, –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏.\n"
    "8) –¢–µ–º–µ–Ω–Ω–æ–π ‚Äî –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ, –≤–æ–ø—Ä–æ—Å—ã.\n"
    "9) G-—Ü–µ–Ω—Ç—Ä ‚Äî –ª—é–±–æ–≤—å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å.\n\n"
    "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã = —Å—Ç–∞–±–∏–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è.\n"
    "–ù–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ = —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ –æ–∫—Ä—É–∂–µ–Ω–∏—é."
)

TEXT_TYPES_STRATEGY = (
    "üß† *–¢–∏–ø—ã –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏*\n"
    "‚Ä¢ *–ú–∞–Ω–∏—Ñ–µ—Å—Ç–æ—Ä* ‚Äî –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç. –°—Ç—Ä–∞—Ç–µ–≥–∏—è: *–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å* –ø–µ—Ä–µ–¥ –¥–µ–π—Å—Ç–≤–∏—è–º–∏.\n"
    "‚Ä¢ *–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä* ‚Äî —Å–æ–∑–¥–∞—ë—Ç –∏ —Ä–µ–∞–ª–∏–∑—É–µ—Ç. –°—Ç—Ä–∞—Ç–µ–≥–∏—è: *–∂–¥–∞—Ç—å –æ—Ç–∫–ª–∏–∫–∞*.\n"
    "‚Ä¢ *–ú–∞–Ω–∏—Ñ–µ—Å—Ç–∏—Ä—É—é—â–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä* ‚Äî —Å–∫–æ—Ä–æ—Å—Ç—å –ú–∞–Ω–∏—Ñ–µ—Å—Ç–æ—Ä–∞ + —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞. "
    "–°—Ç—Ä–∞—Ç–µ–≥–∏—è: *–∂–¥–∞—Ç—å –æ—Ç–∫–ª–∏–∫–∞*, –∑–∞—Ç–µ–º *–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å*.\n"
    "‚Ä¢ *–ü—Ä–æ–µ–∫—Ç–æ—Ä* ‚Äî –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –¥—Ä—É–≥–∏—Ö. –°—Ç—Ä–∞—Ç–µ–≥–∏—è: *–∂–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è*.\n"
    "‚Ä¢ *–†–µ—Ñ–ª–µ–∫—Ç–æ—Ä* ‚Äî –∑–µ—Ä–∫–∞–ª–∏—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ. –°—Ç—Ä–∞—Ç–µ–≥–∏—è: *–∂–¥–∞—Ç—å –ª—É–Ω–Ω—ã–π —Ü–∏–∫–ª (‚âà28 –¥–Ω–µ–π)*."
)

TEXT_AUTHORITIES = (
    "üß≠ *–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç—ã (–∫–∞–∫ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è)*\n"
    "‚Ä¢ *–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π* ‚Äî —Ä–µ—à–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø—Ä–æ–∂–∏—Ç–æ–π –≤–æ–ª–Ω—ã.\n"
    "‚Ä¢ *–°–∞–∫—Ä–∞–ª—å–Ω—ã–π* ‚Äî –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –æ—Ç–∫–ª–∏–∫ —Ç–µ–ª–∞.\n"
    "‚Ä¢ *–°–µ–ª–µ–∑—ë–Ω–æ—á–Ω—ã–π* ‚Äî —Ç–∏—Ö–∞—è –∏–Ω—Ç—É–∏—Ü–∏—è ¬´–∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å¬ª.\n"
    "‚Ä¢ *–≠–≥–æ (–°–µ—Ä–¥–µ—á–Ω—ã–π)* ‚Äî —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–µ –∂–µ–ª–∞–Ω–∏—è –∏ –æ–±–µ—â–∞–Ω–∏—è —Å–µ–±–µ.\n"
    "‚Ä¢ *G-—Ü–µ–Ω—Ç—Ä* ‚Äî –æ—â—É—â–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è/–∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏.\n"
    "‚Ä¢ *–ú–µ–Ω—Ç–∞–ª—å–Ω—ã–π (–¥–ª—è –ü—Ä–æ–µ–∫—Ç–æ—Ä–æ–≤)* ‚Äî —á–µ—Ä–µ–∑ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ.\n"
    "‚Ä¢ *–õ—É–Ω–Ω—ã–π (–¥–ª—è –†–µ—Ñ–ª–µ–∫—Ç–æ—Ä–æ–≤)* ‚Äî —á–µ—Ä–µ–∑ —Ü–∏–∫–ª –õ—É–Ω—ã."
)

TEXT_PRACTICE = (
    "üí° *–ü—Ä–∞–∫—Ç–∏–∫–∞*\n"
    "Human Design ‚Äî –Ω–µ –ø—Ä–æ ¬´–∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å–µ–±—è¬ª, –∞ –ø—Ä–æ —Å–Ω—è—Ç—å —á—É–∂–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è.\n"
    "–ö–ª—é—á ‚Äî —Å–ª–µ–¥–æ–≤–∞—Ç—å *–°—Ç—Ä–∞—Ç–µ–≥–∏–∏* –∏ *–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç—É*.\n"
    "–ü—Ä–∏–Ω–∏–º–∞—è —Å–≤–æ—é –º–µ—Ö–∞–Ω–∏–∫—É, –º—ã —ç–∫–æ–Ω–æ–º–∏–º —ç–Ω–µ—Ä–≥–∏—é –∏ –ø—Ä–∏—Ç—è–≥–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞."
)

TEXT_LISTS = (
    "üìö *–¢–∏–ø—ã –≤ Human Design*\n"
    "1. –ú–∞–Ω–∏—Ñ–µ—Å—Ç–æ—Ä\n2. –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä\n3. –ú–∞–Ω–∏—Ñ–µ—Å—Ç–∏—Ä—É—é—â–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä\n4. –ü—Ä–æ–µ–∫—Ç–æ—Ä\n5. –†–µ—Ñ–ª–µ–∫—Ç–æ—Ä\n\n"
    "üìë *–ü—Ä–æ—Ñ–∏–ª–∏ (12)*\n"
    "1/3, 1/4, 2/4, 2/5, 3/5, 3/6, 4/6, 4/1, 5/1, 5/2, 6/2, 6/3"
)

# ===== –¢–ò–ü–´/–ü–†–û–§–ò–õ–ò ‚Äî –º–∏–Ω–∏-—Ç–µ–∑–∏—Å—ã –¥–ª—è –∞–≤—Ç–æ-—Ä–∞–∑–±–æ—Ä–∞ =====
TYPE_TIPS = {
    "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä": "‚ö° –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: –∂–¥–∏ –æ—Ç–∫–ª–∏–∫–∞ —Ç–µ–ª–∞. –î–µ–ª–∞–π —Ç–æ, —á—Ç–æ –∑–∞–∂–∏–≥–∞–µ—Ç ‚Äî —ç–Ω–µ—Ä–≥–∏—è –ø—Ä–∏–¥—ë—Ç.",
    "–ú–∞–Ω–∏—Ñ–µ—Å—Ç–∏—Ä—É—é—â–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä": "‚ö° –ú–ì: –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç + –æ—Ç–∫–ª–∏–∫. –ú–µ–Ω—è—Ç—å –∫—É—Ä—Å –ø–æ —Ö–æ–¥—É ‚Äî –Ω–æ—Ä–º–∞–ª—å–Ω–æ.",
    "–ú–∞–Ω–∏—Ñ–µ—Å—Ç–æ—Ä": "‚ö° –ú–∞–Ω–∏—Ñ–µ—Å—Ç–æ—Ä: –∏–Ω–∏—Ü–∏–∏—Ä—É–π –∏ –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–π –≤–æ–≤–ª–µ—á—ë–Ω–Ω—ã—Ö ‚Äî —Ç–∞–∫ –º–µ–Ω—å—à–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è.",
    "–ü—Ä–æ–µ–∫—Ç–æ—Ä": "‚ö° –ü—Ä–æ–µ–∫—Ç–æ—Ä: –∂–¥–∏ –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è. –§–æ–∫—É—Å –Ω–∞ —Å–≤–æ–µ–π —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–µ.",
    "–†–µ—Ñ–ª–µ–∫—Ç–æ—Ä": "‚ö° –†–µ—Ñ–ª–µ–∫—Ç–æ—Ä: —Ä–µ—à–µ–Ω–∏—è –Ω–µ —Å–ø–µ—à–∏ ‚Äî –Ω–∞–±–ª—é–¥–∞–π –ª—É–Ω–Ω—ã–π —Ü–∏–∫–ª.",
}

PROFILE_TIPS = {
    "1/3": "üß≠ 1/3 –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å-–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞—Ç–æ—Ä: —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç + –æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –æ–ø—ã—Ç–µ.",
    "1/4": "üß≠ 1/4 –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å-–û–ø–ø–æ—Ä—Ç—É–Ω–∏—Å—Ç: –æ–ø–æ—Ä–∞ + —Å–≤—è–∑–∏/–ª—é–¥–∏.",
    "2/4": "üß≠ 2/4 –û—Ç—à–µ–ª—å–Ω–∏–∫-–û–ø–ø–æ—Ä—Ç—É–Ω–∏—Å—Ç: —Ç–∞–ª–∞–Ω—Ç + –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ –ª—é–¥–µ–π.",
    "2/5": "üß≠ 2/5 –û—Ç—à–µ–ª—å–Ω–∏–∫-–ï—Ä–µ—Ç–∏–∫: —Ç–∞–ª–∞–Ω—Ç + –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å, –±–µ—Ä–µ–≥–∏ –≥—Ä–∞–Ω–∏—Ü—ã –æ–∂–∏–¥–∞–Ω–∏–π.",
    "3/5": "üß≠ 3/5 –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞—Ç–æ—Ä-–ï—Ä–µ—Ç–∏–∫: –ø—Ä–æ–±—É–π ‚Äî –¥–µ–ª–∞–π –≤—ã–≤–æ–¥—ã ‚Äî –≤–µ–¥–∏.",
    "3/6": "üß≠ 3/6 –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞—Ç–æ—Ä-–†–æ–ª–µ–≤–∞—è –º–æ–¥–µ–ª—å: —Ç—Ä–∏ —ç—Ç–∞–ø–∞ –∂–∏–∑–Ω–∏ ‚Üí –º—É–¥—Ä–æ—Å—Ç—å.",
    "4/1": "üß≠ 4/1 –û–ø–ø–æ—Ä—Ç—É–Ω–∏—Å—Ç-–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å: —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å + –≤–∞–∂–Ω—ã –∫–æ–Ω—Ç–∞–∫—Ç—ã.",
    "4/6": "üß≠ 4/6 –û–ø–ø–æ—Ä—Ç—É–Ω–∏—Å—Ç-–†–æ–ª–µ–≤–∞—è –º–æ–¥–µ–ª—å: –ª—é–¥–∏ + —ç—Ç–∞–ø–Ω–æ—Å—Ç—å –ø—É—Ç–∏.",
    "5/1": "üß≠ 5/1 –ï—Ä–µ—Ç–∏–∫-–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å: –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è + –æ–ø–æ—Ä–∞ –Ω–∞ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç.",
    "5/2": "üß≠ 5/2 –ï—Ä–µ—Ç–∏–∫-–û—Ç—à–µ–ª—å–Ω–∏–∫: —Å–ø–∞—Å–∞—Ç–µ–ª—å —Å —Ç–∞–ª–∞–Ω—Ç–æ–º, –±–µ—Ä–µ–≥–∏ —ç–Ω–µ—Ä–≥–∏—é.",
    "6/2": "üß≠ 6/2 –†–æ–ª–µ–≤–∞—è –º–æ–¥–µ–ª—å-–û—Ç—à–µ–ª—å–Ω–∏–∫: —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å –≤–æ–∑—Ä–∞—Å—Ç–æ–º.",
    "6/3": "üß≠ 6/3 –†–æ–ª–µ–≤–∞—è –º–æ–¥–µ–ª—å-–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞—Ç–æ—Ä: –º—É–¥—Ä–æ—Å—Ç—å + –∂–∏–≤–æ–π –æ–ø—ã—Ç.",
}

# ===== –ø–∞—Ä—Å–∏–Ω–≥ —Ç–∏–ø–∞/–ø—Ä–æ—Ñ–∏–ª—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ =====
TYPE_ALIASES = {
    r"\b–º–∞–Ω–∏—Ñ–µ—Å—Ç–∏—Ä(—É—é—â|—É—é—â–∏–π)\s*–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä\b": "–ú–∞–Ω–∏—Ñ–µ—Å—Ç–∏—Ä—É—é—â–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä",
    r"\b–º–≥\b": "–ú–∞–Ω–∏—Ñ–µ—Å—Ç–∏—Ä—É—é—â–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä",
    r"\b–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä\b": "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä",
    r"\b—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω(—ã–π|–∞—è)\s*–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä\b": "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä",
    r"\b–º–∞–Ω–∏—Ñ–µ—Å—Ç–æ—Ä\b": "–ú–∞–Ω–∏—Ñ–µ—Å—Ç–æ—Ä",
    r"\b–ø—Ä–æ–µ–∫—Ç–æ—Ä\b": "–ü—Ä–æ–µ–∫—Ç–æ—Ä",
    r"\b—Ä–µ—Ñ–ª–µ–∫—Ç–æ—Ä\b": "–†–µ—Ñ–ª–µ–∫—Ç–æ—Ä",
}
PROFILE_RE = re.compile(r"(\b[1-6])\s*[/\.]\s*([1-6]\b)")

def extract_type_and_profile(text: str):
    text_lc = text.lower()
    prof = None
    m = PROFILE_RE.search(text_lc)
    if m: prof = f"{m.group(1)}/{m.group(2)}"
    t = None
    for pat, norm in TYPE_ALIASES.items():
        if re.search(pat, text_lc): t = norm; break
    return t, prof

# ========= –ö–õ–ê–í–ò–ê–¢–£–†–´ =========
def main_menu():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.row("üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –±–æ–¥–∏–≥—Ä–∞—Ñ", "üìñ –û Human Design")
    kb.row("üíº –ú–æ–∏ —É—Å–ª—É–≥–∏", "‚úçÔ∏è –Ø –∑–Ω–∞—é —Å–≤–æ–π —Ç–∏–ø/–ø—Ä–æ—Ñ–∏–ª—å")
    return kb

def about_inline():
    kb = types.InlineKeyboardMarkup()
    kb.row(types.InlineKeyboardButton("–ò—Å—Ç–æ—Ä–∏—è –∏ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ", callback_data="about_history"))
    kb.row(types.InlineKeyboardButton("–ö–æ–Ω—Ü–µ–ø—Ü–∏—è –Ω–µ–π—Ç—Ä–∏–Ω–æ", callback_data="about_neutrino"))
    kb.row(types.InlineKeyboardButton("9 —Ü–µ–Ω—Ç—Ä–æ–≤ –±–æ–¥–∏–≥—Ä–∞—Ñ–∞", callback_data="about_centers"))
    kb.row(types.InlineKeyboardButton("–¢–∏–ø—ã –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏", callback_data="about_types_strategy"))
    kb.row(types.InlineKeyboardButton("–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç—ã", callback_data="about_authorities"))
    kb.row(types.InlineKeyboardButton("–ü—Ä–∞–∫—Ç–∏–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è", callback_data="about_practice"))
    kb.row(types.InlineKeyboardButton("–°–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –∏ –ø—Ä–æ—Ñ–∏–ª–µ–π", callback_data="about_lists"))
    return kb

def services_inline():
    kb = types.InlineKeyboardMarkup()
    kb.row(types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è / –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", url=SERVICES_URL))
    kb.row(types.InlineKeyboardButton("–ü–ª–∞—Ç–Ω—ã–π —Ä–∞—Å—á—ë—Ç –Ω–∞ —Å–∞–π—Ç–µ", url=PAID_CALC_URL))
    return kb

# ========= –•–≠–ù–î–õ–ï–†–´ =========
@bot.message_handler(commands=["start", "menu"])
def cmd_start(m: types.Message):
    bot.send_message(
        m.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç *Sabina Energy* –ø–æ Human Design.\n\n"
        "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ: —Å–¥–µ–ª–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞—Å—á—ë—Ç, —É–∑–Ω–∞—Ç—å –æ—Å–Ω–æ–≤—ã, –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–ª–∞—Ç–Ω–æ–º—É –æ—Ç—á—ë—Ç—É –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ —É—Å–ª—É–≥–∏.",
        reply_markup=main_menu()
    )
    bot.send_message(
        m.chat.id,
        "–ï—Å–ª–∏ –∑–Ω–∞–µ—à—å —Å–≤–æ–π *—Ç–∏–ø* –∏ *–ø—Ä–æ—Ñ–∏–ª—å*, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –∏—Ö —Å—é–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: _–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä 3/5_).",
    )

@bot.message_handler(func=lambda ms: ms.text == "üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –±–æ–¥–∏–≥—Ä–∞—Ñ")
def on_calc(ms: types.Message):
    bot.send_message(
        ms.chat.id,
        "üîÆ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–∞—Å—á—ë—Ç–∞:\n"
        f"{FREE_CALC_URL}\n\n"
        "–ù–∞ —Å–∞–π—Ç–µ –Ω–∞–∂–º–∏ *¬´–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Ä—Ç—É¬ª*. –ö–æ–≥–¥–∞ —É–≤–∏–¥–∏—à—å —Å–≤–æ–π *—Ç–∏–ø* –∏ *–ø—Ä–æ—Ñ–∏–ª—å* ‚Äî –ø—Ä–∏—à–ª–∏ –∏—Ö —Å—é–¥–∞, —è –¥–∞–º –º–∏–Ω–∏-—Ä–∞–∑–±–æ—Ä.",
        disable_web_page_preview=False
    )

@bot.message_handler(func=lambda ms: ms.text == "üìñ –û Human Design")
def on_about(ms: types.Message):
    bot.send_message(ms.chat.id, "–í—ã–±–∏—Ä–∞–π —Ä–∞–∑–¥–µ–ª üëá", reply_markup=about_inline())

@bot.message_handler(func=lambda ms: ms.text == "üíº –ú–æ–∏ —É—Å–ª—É–≥–∏")
def on_services(ms: types.Message):
    bot.send_message(
        ms.chat.id,
        "üíº *–ú–æ–∏ —É—Å–ª—É–≥–∏*\n"
        "‚Äî –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä HD\n"
        "‚Äî –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å (–ø–∞—Ä—ã/–¥–µ—Ç–∏)\n"
        "‚Äî –ë–∏–∑–Ω–µ—Å –ø–æ –î–∏–∑–∞–π–Ω—É\n"
        "‚Äî –ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ\n\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å.",
        reply_markup=services_inline()
    )

@bot.message_handler(func=lambda ms: ms.text == "‚úçÔ∏è –Ø –∑–Ω–∞—é —Å–≤–æ–π —Ç–∏–ø/–ø—Ä–æ—Ñ–∏–ª—å")
def on_iknow(ms: types.Message):
    bot.send_message(
        ms.chat.id,
        "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π *—Ç–∏–ø* –∏ *–ø—Ä–æ—Ñ–∏–ª—å* –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n"
        "–ü—Ä–∏–º–µ—Ä—ã: _–ú–∞–Ω–∏—Ñ–µ—Å—Ç–∏—Ä—É—é—â–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä 3/5_, _–ü—Ä–æ–µ–∫—Ç–æ—Ä 4.1_, _–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä 2/4_."
    )

@bot.callback_query_handler(func=lambda c: c.data and c.data.startswith("about_"))
def on_about_cb(c: types.CallbackQuery):
    data = c.data
    mapping = {
        "about_history": TEXT_INTRO,
        "about_neutrino": TEXT_NEUTRINO,
        "about_centers": TEXT_CENTERS,
        "about_types_strategy": TEXT_TYPES_STRATEGY,
        "about_authorities": TEXT_AUTHORITIES,
        "about_practice": TEXT_PRACTICE,
        "about_lists": TEXT_LISTS,
    }
    bot.answer_callback_query(c.id)
    bot.send_message(c.message.chat.id, mapping.get(data, "–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."))

@bot.message_handler(content_types=["text"])
def on_text(ms: types.Message):
    # –ø—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–∏–ø/–ø—Ä–æ—Ñ–∏–ª—å –∏–∑ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    t, prof = extract_type_and_profile(ms.text or "")
    if not t and not prof:
        # –Ω–µ –ø–æ–Ω—è–ª–∏ ‚Äî –Ω–∞–ø–æ–º–Ω–∏–º –º–µ–Ω—é –∏ —Ñ–æ—Ä–º–∞—Ç
        bot.send_message(
            ms.chat.id,
            "–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª–∞ ü§î\n"
            "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π *—Ç–∏–ø* –∏ *–ø—Ä–æ—Ñ–∏–ª—å* –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π.\n"
            "–ü—Ä–∏–º–µ—Ä—ã: _–ú–∞–Ω–∏—Ñ–µ—Å—Ç–∏—Ä—É—é—â–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä 3/5_, _–ü—Ä–æ–µ–∫—Ç–æ—Ä 4.1_, _–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä 2/4_.",
            reply_markup=main_menu()
        )
        return

    parts = []
    if t:
        parts.append(f"–¢–∏–ø: *{t}*\n{TYPE_TIPS.get(t,'–¢–≤–æ–π —Ç–∏–ø ‚Äî —Ç–≤–æ—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.')}")
    if prof:
        parts.append(f"–ü—Ä–æ—Ñ–∏–ª—å: *{prof}*\n{PROFILE_TIPS.get(prof,'–ü—Ä–æ—Ñ–∏–ª—å ‚Äî –ø—Ä–æ —Ä–æ–ª–∏ –∏ —Å–ø–æ—Å–æ–± –æ–±—É—á–µ–Ω–∏—è.')}")

    final = "‚úÖ –¢–≤–æ—ë –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ:\n\n" + "\n\n".join(parts)
    bot.send_message(
        ms.chat.id,
        final,
        reply_markup=types.InlineKeyboardMarkup().add(
            types.InlineKeyboardButton("üíé –ü–ª–∞—Ç–Ω—ã–π —Ä–∞—Å—á—ë—Ç", url=PAID_CALC_URL),
        )
    )

# ========= –í–ï–ë–•–£–ö–ò/–§–õ–ê–°–ö =========
@app.get("/")
def health():
    return "OK"

@app.get("/set-webhook")
def set_webhook():
    if not BOT_TOKEN:
        return jsonify({"ok": False, "error": "BOT_TOKEN is empty"})
    url = f"{BASE_URL}/tg/webhook"
    r = requests.get(
        f"{TG_API}/setWebhook",
        params={"url": url, "secret_token": SECRET_TOKEN},
        timeout=15
    )
    try:
        return jsonify(r.json())
    except Exception:
        return r.text, r.status_code

@app.get("/get-webhook-info")
def get_webhook_info():
    if not BOT_TOKEN:
        return jsonify({"ok": False, "error": "BOT_TOKEN is empty"})
    r = requests.get(f"{TG_API}/getWebhookInfo", timeout=15)
    try:
        return jsonify(r.json())
    except Exception:
        return r.text, r.status_code

@app.post("/tg/webhook")
def tg_webhook():
    # –ø—Ä–æ–≤–µ—Ä–∏–º —Å–µ–∫—Ä–µ—Ç
    if request.headers.get("X-Telegram-Bot-Api-Secret-Token") != SECRET_TOKEN:
        return "forbidden", 403
    try:
        update = telebot.types.Update.de_json(request.get_data().decode("utf-8"))
        bot.process_new_updates([update])
    except Exception:
        # —á—Ç–æ–±—ã –≤–µ–±—Ö—É–∫ –Ω–µ –ø–∞–¥–∞–ª
        pass
    return "ok"

# ========= –õ–û–ö–ê–õ–¨–ù–´–ô –ó–ê–ü–£–°–ö =========
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 8000)))
